   0  $accept : %entry% $end

   1  input : let_stmt

   2  decs : dec
   3       | decs dec

   4  dec : tydec
   5      | vardec
   6      | fundec

   7  tydec : TYPE ID EQ ty

   8  ty : ID
   9     | LBRACE tyfields RBRACE
  10     | ARRAY OF ID

  11  tyfields :
  12           | nonempty_tyfields

  13  nonempty_tyfields : tyfield
  14                    | nonempty_tyfields COMMA tyfield

  15  tyfield : ID COLON ID

  16  record_initialisation_fields :
  17                               | ne_record_initialisation_fields

  18  ne_record_initialisation_fields : record_initialisation_field
  19                                  | ne_record_initialisation_fields COMMA record_initialisation_field

  20  record_initialisation_field : ID EQ exp

  21  vardec : VAR ID ASSIGN exp
  22         | VAR ID COLON ID ASSIGN exp

  23  fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp
  24         | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp

  25  let_stmt : LET decs IN expseq END

  26  expseq :
  27         | nonempty_expseq

  28  nonempty_expseq : exp
  29                  | nonempty_expseq SEMICOLON exp
  30                  | error SEMICOLON exp

  31  exp : STRING
  32      | INT
  33      | NIL
  34      | exp PLUS exp
  35      | exp MINUS exp
  36      | exp TIMES exp
  37      | exp DIVIDE exp
  38      | exp EQ exp
  39      | exp NEQ exp
  40      | exp LT exp
  41      | exp GT exp
  42      | exp LE exp
  43      | exp GE exp
  44      | exp AND exp
  45      | exp OR exp
  46      | MINUS exp
  47      | BREAK
  48      | assignment
  49      | funcall
  50      | var
  51      | ID LBRACK exp RBRACK OF exp
  52      | ID LBRACE record_initialisation_fields RBRACE
  53      | if_stmt
  54      | for_stmt
  55      | while_stmt
  56      | LPAREN expseq RPAREN
  57      | LPAREN error RPAREN
  58      | let_stmt

  59  var : ID DOT ID
  60      | ID LBRACK exp RBRACK
  61      | ID

  62  assignment : var ASSIGN exp

  63  while_stmt : WHILE exp DO exp

  64  if_stmt : IF exp THEN exp
  65          | IF exp THEN exp ELSE exp

  66  for_stmt : FOR ID ASSIGN exp TO exp DO exp

  67  funcall : ID LPAREN params RPAREN

  68  params :
  69         | non_empty_params

  70  non_empty_params : exp
  71                   | non_empty_params COMMA exp

  72  %entry% : '\001' input

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . input  (72)

	LET  shift 3
	.  error

	input  goto 4
	let_stmt  goto 5


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	let_stmt : LET . decs IN expseq END  (25)

	FUNCTION  shift 6
	VAR  shift 7
	TYPE  shift 8
	.  error

	decs  goto 9
	dec  goto 10
	tydec  goto 11
	vardec  goto 12
	fundec  goto 13


state 4
	%entry% : '\001' input .  (72)

	.  reduce 72


state 5
	input : let_stmt .  (1)

	.  reduce 1


state 6
	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp  (23)
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp  (24)

	ID  shift 14
	.  error


state 7
	vardec : VAR . ID ASSIGN exp  (21)
	vardec : VAR . ID COLON ID ASSIGN exp  (22)

	ID  shift 15
	.  error


state 8
	tydec : TYPE . ID EQ ty  (7)

	ID  shift 16
	.  error


state 9
	decs : decs . dec  (3)
	let_stmt : LET decs . IN expseq END  (25)

	IN  shift 17
	FUNCTION  shift 6
	VAR  shift 7
	TYPE  shift 8
	.  error

	dec  goto 18
	tydec  goto 11
	vardec  goto 12
	fundec  goto 13


state 10
	decs : dec .  (2)

	.  reduce 2


state 11
	dec : tydec .  (4)

	.  reduce 4


state 12
	dec : vardec .  (5)

	.  reduce 5


state 13
	dec : fundec .  (6)

	.  reduce 6


state 14
	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp  (23)
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp  (24)

	LPAREN  shift 19
	.  error


state 15
	vardec : VAR ID . ASSIGN exp  (21)
	vardec : VAR ID . COLON ID ASSIGN exp  (22)

	COLON  shift 20
	ASSIGN  shift 21
	.  error


state 16
	tydec : TYPE ID . EQ ty  (7)

	EQ  shift 22
	.  error


state 17
	let_stmt : LET decs IN . expseq END  (25)
	expseq : .  (26)

	error  shift 23
	ID  shift 24
	STRING  shift 25
	INT  shift 26
	LPAREN  shift 27
	MINUS  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	LET  shift 3
	BREAK  shift 32
	NIL  shift 33
	END  reduce 26

	let_stmt  goto 34
	exp  goto 35
	expseq  goto 36
	nonempty_expseq  goto 37
	assignment  goto 38
	funcall  goto 39
	var  goto 40
	if_stmt  goto 41
	for_stmt  goto 42
	while_stmt  goto 43


state 18
	decs : decs dec .  (3)

	.  reduce 3


state 19
	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp  (23)
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp  (24)
	tyfields : .  (11)

	ID  shift 44
	RPAREN  reduce 11

	tyfields  goto 45
	nonempty_tyfields  goto 46
	tyfield  goto 47


state 20
	vardec : VAR ID COLON . ID ASSIGN exp  (22)

	ID  shift 48
	.  error


state 21
	vardec : VAR ID ASSIGN . exp  (21)

	ID  shift 24
	STRING  shift 25
	INT  shift 26
	LPAREN  shift 27
	MINUS  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	LET  shift 3
	BREAK  shift 32
	NIL  shift 33
	.  error

	let_stmt  goto 34
	exp  goto 49
	assignment  goto 38
	funcall  goto 39
	var  goto 40
	if_stmt  goto 41
	for_stmt  goto 42
	while_stmt  goto 43


state 22
	tydec : TYPE ID EQ . ty  (7)

	ID  shift 50
	LBRACE  shift 51
	ARRAY  shift 52
	.  error

	ty  goto 53


state 23
	nonempty_expseq : error . SEMICOLON exp  (30)

	SEMICOLON  shift 54
	.  error


state 24
	exp : ID . LBRACK exp RBRACK OF exp  (51)
	exp : ID . LBRACE record_initialisation_fields RBRACE  (52)
	var : ID . DOT ID  (59)
	var : ID . LBRACK exp RBRACK  (60)
	var : ID .  (61)
	funcall : ID . LPAREN params RPAREN  (67)

	LPAREN  shift 55
	LBRACK  shift 56
	LBRACE  shift 57
	DOT  shift 58
	COMMA  reduce 61
	SEMICOLON  reduce 61
	RPAREN  reduce 61
	RBRACK  reduce 61
	RBRACE  reduce 61
	PLUS  reduce 61
	MINUS  reduce 61
	TIMES  reduce 61
	DIVIDE  reduce 61
	EQ  reduce 61
	NEQ  reduce 61
	LT  reduce 61
	LE  reduce 61
	GT  reduce 61
	GE  reduce 61
	AND  reduce 61
	OR  reduce 61
	ASSIGN  reduce 61
	THEN  reduce 61
	ELSE  reduce 61
	TO  reduce 61
	DO  reduce 61
	IN  reduce 61
	END  reduce 61
	FUNCTION  reduce 61
	VAR  reduce 61
	TYPE  reduce 61


state 25
	exp : STRING .  (31)

	.  reduce 31


state 26
	exp : INT .  (32)

	.  reduce 32


state 27
	exp : LPAREN . expseq RPAREN  (56)
	exp : LPAREN . error RPAREN  (57)
	expseq : .  (26)

	error  shift 59
	ID  shift 24
	STRING  shift 25
	INT  shift 26
	LPAREN  shift 27
	MINUS  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	LET  shift 3
	BREAK  shift 32
	NIL  shift 33
	RPAREN  reduce 26

	let_stmt  goto 34
	exp  goto 35
	expseq  goto 60
	nonempty_expseq  goto 37
	assignment  goto 38
	funcall  goto 39
	var  goto 40
	if_stmt  goto 41
	for_stmt  goto 42
	while_stmt  goto 43


state 28
	exp : MINUS . exp  (46)

	ID  shift 24
	STRING  shift 25
	INT  shift 26
	LPAREN  shift 27
	MINUS  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	LET  shift 3
	BREAK  shift 32
	NIL  shift 33
	.  error

	let_stmt  goto 34
	exp  goto 61
	assignment  goto 38
	funcall  goto 39
	var  goto 40
	if_stmt  goto 41
	for_stmt  goto 42
	while_stmt  goto 43


state 29
	if_stmt : IF . exp THEN exp  (64)
	if_stmt : IF . exp THEN exp ELSE exp  (65)

	ID  shift 24
	STRING  shift 25
	INT  shift 26
	LPAREN  shift 27
	MINUS  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	LET  shift 3
	BREAK  shift 32
	NIL  shift 33
	.  error

	let_stmt  goto 34
	exp  goto 62
	assignment  goto 38
	funcall  goto 39
	var  goto 40
	if_stmt  goto 41
	for_stmt  goto 42
	while_stmt  goto 43


state 30
	while_stmt : WHILE . exp DO exp  (63)

	ID  shift 24
	STRING  shift 25
	INT  shift 26
	LPAREN  shift 27
	MINUS  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	LET  shift 3
	BREAK  shift 32
	NIL  shift 33
	.  error

	let_stmt  goto 34
	exp  goto 63
	assignment  goto 38
	funcall  goto 39
	var  goto 40
	if_stmt  goto 41
	for_stmt  goto 42
	while_stmt  goto 43


state 31
	for_stmt : FOR . ID ASSIGN exp TO exp DO exp  (66)

	ID  shift 64
	.  error


state 32
	exp : BREAK .  (47)

	.  reduce 47


state 33
	exp : NIL .  (33)

	.  reduce 33


state 34
	exp : let_stmt .  (58)

	.  reduce 58


state 35
	nonempty_expseq : exp .  (28)
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)

	PLUS  shift 65
	MINUS  shift 66
	TIMES  shift 67
	DIVIDE  shift 68
	EQ  shift 69
	NEQ  shift 70
	LT  shift 71
	LE  shift 72
	GT  shift 73
	GE  shift 74
	AND  shift 75
	OR  shift 76
	SEMICOLON  reduce 28
	RPAREN  reduce 28
	END  reduce 28


state 36
	let_stmt : LET decs IN expseq . END  (25)

	END  shift 77
	.  error


state 37
	expseq : nonempty_expseq .  (27)
	nonempty_expseq : nonempty_expseq . SEMICOLON exp  (29)

	SEMICOLON  shift 78
	RPAREN  reduce 27
	END  reduce 27


state 38
	exp : assignment .  (48)

	.  reduce 48


state 39
	exp : funcall .  (49)

	.  reduce 49


state 40
	exp : var .  (50)
	assignment : var . ASSIGN exp  (62)

	ASSIGN  shift 79
	COMMA  reduce 50
	SEMICOLON  reduce 50
	RPAREN  reduce 50
	RBRACK  reduce 50
	RBRACE  reduce 50
	PLUS  reduce 50
	MINUS  reduce 50
	TIMES  reduce 50
	DIVIDE  reduce 50
	EQ  reduce 50
	NEQ  reduce 50
	LT  reduce 50
	LE  reduce 50
	GT  reduce 50
	GE  reduce 50
	AND  reduce 50
	OR  reduce 50
	THEN  reduce 50
	ELSE  reduce 50
	TO  reduce 50
	DO  reduce 50
	IN  reduce 50
	END  reduce 50
	FUNCTION  reduce 50
	VAR  reduce 50
	TYPE  reduce 50


state 41
	exp : if_stmt .  (53)

	.  reduce 53


state 42
	exp : for_stmt .  (54)

	.  reduce 54


state 43
	exp : while_stmt .  (55)

	.  reduce 55


state 44
	tyfield : ID . COLON ID  (15)

	COLON  shift 80
	.  error


state 45
	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp  (23)
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp  (24)

	RPAREN  shift 81
	.  error


state 46
	tyfields : nonempty_tyfields .  (12)
	nonempty_tyfields : nonempty_tyfields . COMMA tyfield  (14)

	COMMA  shift 82
	RPAREN  reduce 12
	RBRACE  reduce 12


state 47
	nonempty_tyfields : tyfield .  (13)

	.  reduce 13


state 48
	vardec : VAR ID COLON ID . ASSIGN exp  (22)

	ASSIGN  shift 83
	.  error


state 49
	vardec : VAR ID ASSIGN exp .  (21)
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)

	PLUS  shift 65
	MINUS  shift 66
	TIMES  shift 67
	DIVIDE  shift 68
	EQ  shift 69
	NEQ  shift 70
	LT  shift 71
	LE  shift 72
	GT  shift 73
	GE  shift 74
	AND  shift 75
	OR  shift 76
	IN  reduce 21
	FUNCTION  reduce 21
	VAR  reduce 21
	TYPE  reduce 21


state 50
	ty : ID .  (8)

	.  reduce 8


state 51
	ty : LBRACE . tyfields RBRACE  (9)
	tyfields : .  (11)

	ID  shift 44
	RBRACE  reduce 11

	tyfields  goto 84
	nonempty_tyfields  goto 46
	tyfield  goto 47


state 52
	ty : ARRAY . OF ID  (10)

	OF  shift 85
	.  error


state 53
	tydec : TYPE ID EQ ty .  (7)

	.  reduce 7


state 54
	nonempty_expseq : error SEMICOLON . exp  (30)

	ID  shift 24
	STRING  shift 25
	INT  shift 26
	LPAREN  shift 27
	MINUS  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	LET  shift 3
	BREAK  shift 32
	NIL  shift 33
	.  error

	let_stmt  goto 34
	exp  goto 86
	assignment  goto 38
	funcall  goto 39
	var  goto 40
	if_stmt  goto 41
	for_stmt  goto 42
	while_stmt  goto 43


state 55
	funcall : ID LPAREN . params RPAREN  (67)
	params : .  (68)

	ID  shift 24
	STRING  shift 25
	INT  shift 26
	LPAREN  shift 27
	MINUS  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	LET  shift 3
	BREAK  shift 32
	NIL  shift 33
	RPAREN  reduce 68

	let_stmt  goto 34
	exp  goto 87
	assignment  goto 38
	funcall  goto 39
	var  goto 40
	if_stmt  goto 41
	for_stmt  goto 42
	while_stmt  goto 43
	params  goto 88
	non_empty_params  goto 89


state 56
	exp : ID LBRACK . exp RBRACK OF exp  (51)
	var : ID LBRACK . exp RBRACK  (60)

	ID  shift 24
	STRING  shift 25
	INT  shift 26
	LPAREN  shift 27
	MINUS  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	LET  shift 3
	BREAK  shift 32
	NIL  shift 33
	.  error

	let_stmt  goto 34
	exp  goto 90
	assignment  goto 38
	funcall  goto 39
	var  goto 40
	if_stmt  goto 41
	for_stmt  goto 42
	while_stmt  goto 43


state 57
	exp : ID LBRACE . record_initialisation_fields RBRACE  (52)
	record_initialisation_fields : .  (16)

	ID  shift 91
	RBRACE  reduce 16

	record_initialisation_fields  goto 92
	ne_record_initialisation_fields  goto 93
	record_initialisation_field  goto 94


state 58
	var : ID DOT . ID  (59)

	ID  shift 95
	.  error


state 59
	nonempty_expseq : error . SEMICOLON exp  (30)
	exp : LPAREN error . RPAREN  (57)

	SEMICOLON  shift 54
	RPAREN  shift 96
	.  error


state 60
	exp : LPAREN expseq . RPAREN  (56)

	RPAREN  shift 97
	.  error


state 61
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)
	exp : MINUS exp .  (46)

	.  reduce 46


state 62
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)
	if_stmt : IF exp . THEN exp  (64)
	if_stmt : IF exp . THEN exp ELSE exp  (65)

	PLUS  shift 65
	MINUS  shift 66
	TIMES  shift 67
	DIVIDE  shift 68
	EQ  shift 69
	NEQ  shift 70
	LT  shift 71
	LE  shift 72
	GT  shift 73
	GE  shift 74
	AND  shift 75
	OR  shift 76
	THEN  shift 98
	.  error


state 63
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)
	while_stmt : WHILE exp . DO exp  (63)

	PLUS  shift 65
	MINUS  shift 66
	TIMES  shift 67
	DIVIDE  shift 68
	EQ  shift 69
	NEQ  shift 70
	LT  shift 71
	LE  shift 72
	GT  shift 73
	GE  shift 74
	AND  shift 75
	OR  shift 76
	DO  shift 99
	.  error


state 64
	for_stmt : FOR ID . ASSIGN exp TO exp DO exp  (66)

	ASSIGN  shift 100
	.  error


state 65
	exp : exp PLUS . exp  (34)

	ID  shift 24
	STRING  shift 25
	INT  shift 26
	LPAREN  shift 27
	MINUS  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	LET  shift 3
	BREAK  shift 32
	NIL  shift 33
	.  error

	let_stmt  goto 34
	exp  goto 101
	assignment  goto 38
	funcall  goto 39
	var  goto 40
	if_stmt  goto 41
	for_stmt  goto 42
	while_stmt  goto 43


state 66
	exp : exp MINUS . exp  (35)

	ID  shift 24
	STRING  shift 25
	INT  shift 26
	LPAREN  shift 27
	MINUS  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	LET  shift 3
	BREAK  shift 32
	NIL  shift 33
	.  error

	let_stmt  goto 34
	exp  goto 102
	assignment  goto 38
	funcall  goto 39
	var  goto 40
	if_stmt  goto 41
	for_stmt  goto 42
	while_stmt  goto 43


state 67
	exp : exp TIMES . exp  (36)

	ID  shift 24
	STRING  shift 25
	INT  shift 26
	LPAREN  shift 27
	MINUS  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	LET  shift 3
	BREAK  shift 32
	NIL  shift 33
	.  error

	let_stmt  goto 34
	exp  goto 103
	assignment  goto 38
	funcall  goto 39
	var  goto 40
	if_stmt  goto 41
	for_stmt  goto 42
	while_stmt  goto 43


state 68
	exp : exp DIVIDE . exp  (37)

	ID  shift 24
	STRING  shift 25
	INT  shift 26
	LPAREN  shift 27
	MINUS  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	LET  shift 3
	BREAK  shift 32
	NIL  shift 33
	.  error

	let_stmt  goto 34
	exp  goto 104
	assignment  goto 38
	funcall  goto 39
	var  goto 40
	if_stmt  goto 41
	for_stmt  goto 42
	while_stmt  goto 43


state 69
	exp : exp EQ . exp  (38)

	ID  shift 24
	STRING  shift 25
	INT  shift 26
	LPAREN  shift 27
	MINUS  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	LET  shift 3
	BREAK  shift 32
	NIL  shift 33
	.  error

	let_stmt  goto 34
	exp  goto 105
	assignment  goto 38
	funcall  goto 39
	var  goto 40
	if_stmt  goto 41
	for_stmt  goto 42
	while_stmt  goto 43


state 70
	exp : exp NEQ . exp  (39)

	ID  shift 24
	STRING  shift 25
	INT  shift 26
	LPAREN  shift 27
	MINUS  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	LET  shift 3
	BREAK  shift 32
	NIL  shift 33
	.  error

	let_stmt  goto 34
	exp  goto 106
	assignment  goto 38
	funcall  goto 39
	var  goto 40
	if_stmt  goto 41
	for_stmt  goto 42
	while_stmt  goto 43


state 71
	exp : exp LT . exp  (40)

	ID  shift 24
	STRING  shift 25
	INT  shift 26
	LPAREN  shift 27
	MINUS  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	LET  shift 3
	BREAK  shift 32
	NIL  shift 33
	.  error

	let_stmt  goto 34
	exp  goto 107
	assignment  goto 38
	funcall  goto 39
	var  goto 40
	if_stmt  goto 41
	for_stmt  goto 42
	while_stmt  goto 43


state 72
	exp : exp LE . exp  (42)

	ID  shift 24
	STRING  shift 25
	INT  shift 26
	LPAREN  shift 27
	MINUS  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	LET  shift 3
	BREAK  shift 32
	NIL  shift 33
	.  error

	let_stmt  goto 34
	exp  goto 108
	assignment  goto 38
	funcall  goto 39
	var  goto 40
	if_stmt  goto 41
	for_stmt  goto 42
	while_stmt  goto 43


state 73
	exp : exp GT . exp  (41)

	ID  shift 24
	STRING  shift 25
	INT  shift 26
	LPAREN  shift 27
	MINUS  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	LET  shift 3
	BREAK  shift 32
	NIL  shift 33
	.  error

	let_stmt  goto 34
	exp  goto 109
	assignment  goto 38
	funcall  goto 39
	var  goto 40
	if_stmt  goto 41
	for_stmt  goto 42
	while_stmt  goto 43


state 74
	exp : exp GE . exp  (43)

	ID  shift 24
	STRING  shift 25
	INT  shift 26
	LPAREN  shift 27
	MINUS  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	LET  shift 3
	BREAK  shift 32
	NIL  shift 33
	.  error

	let_stmt  goto 34
	exp  goto 110
	assignment  goto 38
	funcall  goto 39
	var  goto 40
	if_stmt  goto 41
	for_stmt  goto 42
	while_stmt  goto 43


state 75
	exp : exp AND . exp  (44)

	ID  shift 24
	STRING  shift 25
	INT  shift 26
	LPAREN  shift 27
	MINUS  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	LET  shift 3
	BREAK  shift 32
	NIL  shift 33
	.  error

	let_stmt  goto 34
	exp  goto 111
	assignment  goto 38
	funcall  goto 39
	var  goto 40
	if_stmt  goto 41
	for_stmt  goto 42
	while_stmt  goto 43


state 76
	exp : exp OR . exp  (45)

	ID  shift 24
	STRING  shift 25
	INT  shift 26
	LPAREN  shift 27
	MINUS  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	LET  shift 3
	BREAK  shift 32
	NIL  shift 33
	.  error

	let_stmt  goto 34
	exp  goto 112
	assignment  goto 38
	funcall  goto 39
	var  goto 40
	if_stmt  goto 41
	for_stmt  goto 42
	while_stmt  goto 43


state 77
	let_stmt : LET decs IN expseq END .  (25)

	.  reduce 25


state 78
	nonempty_expseq : nonempty_expseq SEMICOLON . exp  (29)

	ID  shift 24
	STRING  shift 25
	INT  shift 26
	LPAREN  shift 27
	MINUS  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	LET  shift 3
	BREAK  shift 32
	NIL  shift 33
	.  error

	let_stmt  goto 34
	exp  goto 113
	assignment  goto 38
	funcall  goto 39
	var  goto 40
	if_stmt  goto 41
	for_stmt  goto 42
	while_stmt  goto 43


state 79
	assignment : var ASSIGN . exp  (62)

	ID  shift 24
	STRING  shift 25
	INT  shift 26
	LPAREN  shift 27
	MINUS  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	LET  shift 3
	BREAK  shift 32
	NIL  shift 33
	.  error

	let_stmt  goto 34
	exp  goto 114
	assignment  goto 38
	funcall  goto 39
	var  goto 40
	if_stmt  goto 41
	for_stmt  goto 42
	while_stmt  goto 43


state 80
	tyfield : ID COLON . ID  (15)

	ID  shift 115
	.  error


state 81
	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp  (23)
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp  (24)

	COLON  shift 116
	EQ  shift 117
	.  error


state 82
	nonempty_tyfields : nonempty_tyfields COMMA . tyfield  (14)

	ID  shift 44
	.  error

	tyfield  goto 118


state 83
	vardec : VAR ID COLON ID ASSIGN . exp  (22)

	ID  shift 24
	STRING  shift 25
	INT  shift 26
	LPAREN  shift 27
	MINUS  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	LET  shift 3
	BREAK  shift 32
	NIL  shift 33
	.  error

	let_stmt  goto 34
	exp  goto 119
	assignment  goto 38
	funcall  goto 39
	var  goto 40
	if_stmt  goto 41
	for_stmt  goto 42
	while_stmt  goto 43


state 84
	ty : LBRACE tyfields . RBRACE  (9)

	RBRACE  shift 120
	.  error


state 85
	ty : ARRAY OF . ID  (10)

	ID  shift 121
	.  error


state 86
	nonempty_expseq : error SEMICOLON exp .  (30)
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)

	PLUS  shift 65
	MINUS  shift 66
	TIMES  shift 67
	DIVIDE  shift 68
	EQ  shift 69
	NEQ  shift 70
	LT  shift 71
	LE  shift 72
	GT  shift 73
	GE  shift 74
	AND  shift 75
	OR  shift 76
	SEMICOLON  reduce 30
	RPAREN  reduce 30
	END  reduce 30


state 87
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)
	non_empty_params : exp .  (70)

	PLUS  shift 65
	MINUS  shift 66
	TIMES  shift 67
	DIVIDE  shift 68
	EQ  shift 69
	NEQ  shift 70
	LT  shift 71
	LE  shift 72
	GT  shift 73
	GE  shift 74
	AND  shift 75
	OR  shift 76
	COMMA  reduce 70
	RPAREN  reduce 70


state 88
	funcall : ID LPAREN params . RPAREN  (67)

	RPAREN  shift 122
	.  error


state 89
	params : non_empty_params .  (69)
	non_empty_params : non_empty_params . COMMA exp  (71)

	COMMA  shift 123
	RPAREN  reduce 69


state 90
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)
	exp : ID LBRACK exp . RBRACK OF exp  (51)
	var : ID LBRACK exp . RBRACK  (60)

	RBRACK  shift 124
	PLUS  shift 65
	MINUS  shift 66
	TIMES  shift 67
	DIVIDE  shift 68
	EQ  shift 69
	NEQ  shift 70
	LT  shift 71
	LE  shift 72
	GT  shift 73
	GE  shift 74
	AND  shift 75
	OR  shift 76
	.  error


state 91
	record_initialisation_field : ID . EQ exp  (20)

	EQ  shift 125
	.  error


state 92
	exp : ID LBRACE record_initialisation_fields . RBRACE  (52)

	RBRACE  shift 126
	.  error


state 93
	record_initialisation_fields : ne_record_initialisation_fields .  (17)
	ne_record_initialisation_fields : ne_record_initialisation_fields . COMMA record_initialisation_field  (19)

	COMMA  shift 127
	RBRACE  reduce 17


state 94
	ne_record_initialisation_fields : record_initialisation_field .  (18)

	.  reduce 18


state 95
	var : ID DOT ID .  (59)

	.  reduce 59


state 96
	exp : LPAREN error RPAREN .  (57)

	.  reduce 57


state 97
	exp : LPAREN expseq RPAREN .  (56)

	.  reduce 56


state 98
	if_stmt : IF exp THEN . exp  (64)
	if_stmt : IF exp THEN . exp ELSE exp  (65)

	ID  shift 24
	STRING  shift 25
	INT  shift 26
	LPAREN  shift 27
	MINUS  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	LET  shift 3
	BREAK  shift 32
	NIL  shift 33
	.  error

	let_stmt  goto 34
	exp  goto 128
	assignment  goto 38
	funcall  goto 39
	var  goto 40
	if_stmt  goto 41
	for_stmt  goto 42
	while_stmt  goto 43


state 99
	while_stmt : WHILE exp DO . exp  (63)

	ID  shift 24
	STRING  shift 25
	INT  shift 26
	LPAREN  shift 27
	MINUS  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	LET  shift 3
	BREAK  shift 32
	NIL  shift 33
	.  error

	let_stmt  goto 34
	exp  goto 129
	assignment  goto 38
	funcall  goto 39
	var  goto 40
	if_stmt  goto 41
	for_stmt  goto 42
	while_stmt  goto 43


state 100
	for_stmt : FOR ID ASSIGN . exp TO exp DO exp  (66)

	ID  shift 24
	STRING  shift 25
	INT  shift 26
	LPAREN  shift 27
	MINUS  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	LET  shift 3
	BREAK  shift 32
	NIL  shift 33
	.  error

	let_stmt  goto 34
	exp  goto 130
	assignment  goto 38
	funcall  goto 39
	var  goto 40
	if_stmt  goto 41
	for_stmt  goto 42
	while_stmt  goto 43


state 101
	exp : exp . PLUS exp  (34)
	exp : exp PLUS exp .  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)

	TIMES  shift 67
	DIVIDE  shift 68
	COMMA  reduce 34
	SEMICOLON  reduce 34
	RPAREN  reduce 34
	RBRACK  reduce 34
	RBRACE  reduce 34
	PLUS  reduce 34
	MINUS  reduce 34
	EQ  reduce 34
	NEQ  reduce 34
	LT  reduce 34
	LE  reduce 34
	GT  reduce 34
	GE  reduce 34
	AND  reduce 34
	OR  reduce 34
	THEN  reduce 34
	ELSE  reduce 34
	TO  reduce 34
	DO  reduce 34
	IN  reduce 34
	END  reduce 34
	FUNCTION  reduce 34
	VAR  reduce 34
	TYPE  reduce 34


state 102
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp MINUS exp .  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)

	TIMES  shift 67
	DIVIDE  shift 68
	COMMA  reduce 35
	SEMICOLON  reduce 35
	RPAREN  reduce 35
	RBRACK  reduce 35
	RBRACE  reduce 35
	PLUS  reduce 35
	MINUS  reduce 35
	EQ  reduce 35
	NEQ  reduce 35
	LT  reduce 35
	LE  reduce 35
	GT  reduce 35
	GE  reduce 35
	AND  reduce 35
	OR  reduce 35
	THEN  reduce 35
	ELSE  reduce 35
	TO  reduce 35
	DO  reduce 35
	IN  reduce 35
	END  reduce 35
	FUNCTION  reduce 35
	VAR  reduce 35
	TYPE  reduce 35


state 103
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp TIMES exp .  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)

	.  reduce 36


state 104
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp DIVIDE exp .  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)

	.  reduce 37


state 105
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp EQ exp .  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)

	PLUS  shift 65
	MINUS  shift 66
	TIMES  shift 67
	DIVIDE  shift 68
	LT  shift 71
	LE  shift 72
	GT  shift 73
	GE  shift 74
	COMMA  reduce 38
	SEMICOLON  reduce 38
	RPAREN  reduce 38
	RBRACK  reduce 38
	RBRACE  reduce 38
	EQ  reduce 38
	NEQ  reduce 38
	AND  reduce 38
	OR  reduce 38
	THEN  reduce 38
	ELSE  reduce 38
	TO  reduce 38
	DO  reduce 38
	IN  reduce 38
	END  reduce 38
	FUNCTION  reduce 38
	VAR  reduce 38
	TYPE  reduce 38


state 106
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp NEQ exp .  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)

	PLUS  shift 65
	MINUS  shift 66
	TIMES  shift 67
	DIVIDE  shift 68
	LT  shift 71
	LE  shift 72
	GT  shift 73
	GE  shift 74
	COMMA  reduce 39
	SEMICOLON  reduce 39
	RPAREN  reduce 39
	RBRACK  reduce 39
	RBRACE  reduce 39
	EQ  reduce 39
	NEQ  reduce 39
	AND  reduce 39
	OR  reduce 39
	THEN  reduce 39
	ELSE  reduce 39
	TO  reduce 39
	DO  reduce 39
	IN  reduce 39
	END  reduce 39
	FUNCTION  reduce 39
	VAR  reduce 39
	TYPE  reduce 39


state 107
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp LT exp .  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)

	PLUS  shift 65
	MINUS  shift 66
	TIMES  shift 67
	DIVIDE  shift 68
	COMMA  reduce 40
	SEMICOLON  reduce 40
	RPAREN  reduce 40
	RBRACK  reduce 40
	RBRACE  reduce 40
	EQ  reduce 40
	NEQ  reduce 40
	LT  reduce 40
	LE  reduce 40
	GT  reduce 40
	GE  reduce 40
	AND  reduce 40
	OR  reduce 40
	THEN  reduce 40
	ELSE  reduce 40
	TO  reduce 40
	DO  reduce 40
	IN  reduce 40
	END  reduce 40
	FUNCTION  reduce 40
	VAR  reduce 40
	TYPE  reduce 40


state 108
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp LE exp .  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)

	PLUS  shift 65
	MINUS  shift 66
	TIMES  shift 67
	DIVIDE  shift 68
	COMMA  reduce 42
	SEMICOLON  reduce 42
	RPAREN  reduce 42
	RBRACK  reduce 42
	RBRACE  reduce 42
	EQ  reduce 42
	NEQ  reduce 42
	LT  reduce 42
	LE  reduce 42
	GT  reduce 42
	GE  reduce 42
	AND  reduce 42
	OR  reduce 42
	THEN  reduce 42
	ELSE  reduce 42
	TO  reduce 42
	DO  reduce 42
	IN  reduce 42
	END  reduce 42
	FUNCTION  reduce 42
	VAR  reduce 42
	TYPE  reduce 42


state 109
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp GT exp .  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)

	PLUS  shift 65
	MINUS  shift 66
	TIMES  shift 67
	DIVIDE  shift 68
	COMMA  reduce 41
	SEMICOLON  reduce 41
	RPAREN  reduce 41
	RBRACK  reduce 41
	RBRACE  reduce 41
	EQ  reduce 41
	NEQ  reduce 41
	LT  reduce 41
	LE  reduce 41
	GT  reduce 41
	GE  reduce 41
	AND  reduce 41
	OR  reduce 41
	THEN  reduce 41
	ELSE  reduce 41
	TO  reduce 41
	DO  reduce 41
	IN  reduce 41
	END  reduce 41
	FUNCTION  reduce 41
	VAR  reduce 41
	TYPE  reduce 41


state 110
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp GE exp .  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)

	PLUS  shift 65
	MINUS  shift 66
	TIMES  shift 67
	DIVIDE  shift 68
	COMMA  reduce 43
	SEMICOLON  reduce 43
	RPAREN  reduce 43
	RBRACK  reduce 43
	RBRACE  reduce 43
	EQ  reduce 43
	NEQ  reduce 43
	LT  reduce 43
	LE  reduce 43
	GT  reduce 43
	GE  reduce 43
	AND  reduce 43
	OR  reduce 43
	THEN  reduce 43
	ELSE  reduce 43
	TO  reduce 43
	DO  reduce 43
	IN  reduce 43
	END  reduce 43
	FUNCTION  reduce 43
	VAR  reduce 43
	TYPE  reduce 43


state 111
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp AND exp .  (44)
	exp : exp . OR exp  (45)

	PLUS  shift 65
	MINUS  shift 66
	TIMES  shift 67
	DIVIDE  shift 68
	EQ  shift 69
	NEQ  shift 70
	LT  shift 71
	LE  shift 72
	GT  shift 73
	GE  shift 74
	COMMA  reduce 44
	SEMICOLON  reduce 44
	RPAREN  reduce 44
	RBRACK  reduce 44
	RBRACE  reduce 44
	AND  reduce 44
	OR  reduce 44
	THEN  reduce 44
	ELSE  reduce 44
	TO  reduce 44
	DO  reduce 44
	IN  reduce 44
	END  reduce 44
	FUNCTION  reduce 44
	VAR  reduce 44
	TYPE  reduce 44


state 112
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)
	exp : exp OR exp .  (45)

	PLUS  shift 65
	MINUS  shift 66
	TIMES  shift 67
	DIVIDE  shift 68
	EQ  shift 69
	NEQ  shift 70
	LT  shift 71
	LE  shift 72
	GT  shift 73
	GE  shift 74
	COMMA  reduce 45
	SEMICOLON  reduce 45
	RPAREN  reduce 45
	RBRACK  reduce 45
	RBRACE  reduce 45
	AND  reduce 45
	OR  reduce 45
	THEN  reduce 45
	ELSE  reduce 45
	TO  reduce 45
	DO  reduce 45
	IN  reduce 45
	END  reduce 45
	FUNCTION  reduce 45
	VAR  reduce 45
	TYPE  reduce 45


state 113
	nonempty_expseq : nonempty_expseq SEMICOLON exp .  (29)
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)

	PLUS  shift 65
	MINUS  shift 66
	TIMES  shift 67
	DIVIDE  shift 68
	EQ  shift 69
	NEQ  shift 70
	LT  shift 71
	LE  shift 72
	GT  shift 73
	GE  shift 74
	AND  shift 75
	OR  shift 76
	SEMICOLON  reduce 29
	RPAREN  reduce 29
	END  reduce 29


state 114
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)
	assignment : var ASSIGN exp .  (62)

	PLUS  shift 65
	MINUS  shift 66
	TIMES  shift 67
	DIVIDE  shift 68
	EQ  shift 69
	NEQ  shift 70
	LT  shift 71
	LE  shift 72
	GT  shift 73
	GE  shift 74
	AND  shift 75
	OR  shift 76
	COMMA  reduce 62
	SEMICOLON  reduce 62
	RPAREN  reduce 62
	RBRACK  reduce 62
	RBRACE  reduce 62
	THEN  reduce 62
	ELSE  reduce 62
	TO  reduce 62
	DO  reduce 62
	IN  reduce 62
	END  reduce 62
	FUNCTION  reduce 62
	VAR  reduce 62
	TYPE  reduce 62


state 115
	tyfield : ID COLON ID .  (15)

	.  reduce 15


state 116
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp  (24)

	ID  shift 131
	.  error


state 117
	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp  (23)

	ID  shift 24
	STRING  shift 25
	INT  shift 26
	LPAREN  shift 27
	MINUS  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	LET  shift 3
	BREAK  shift 32
	NIL  shift 33
	.  error

	let_stmt  goto 34
	exp  goto 132
	assignment  goto 38
	funcall  goto 39
	var  goto 40
	if_stmt  goto 41
	for_stmt  goto 42
	while_stmt  goto 43


state 118
	nonempty_tyfields : nonempty_tyfields COMMA tyfield .  (14)

	.  reduce 14


state 119
	vardec : VAR ID COLON ID ASSIGN exp .  (22)
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)

	PLUS  shift 65
	MINUS  shift 66
	TIMES  shift 67
	DIVIDE  shift 68
	EQ  shift 69
	NEQ  shift 70
	LT  shift 71
	LE  shift 72
	GT  shift 73
	GE  shift 74
	AND  shift 75
	OR  shift 76
	IN  reduce 22
	FUNCTION  reduce 22
	VAR  reduce 22
	TYPE  reduce 22


state 120
	ty : LBRACE tyfields RBRACE .  (9)

	.  reduce 9


state 121
	ty : ARRAY OF ID .  (10)

	.  reduce 10


state 122
	funcall : ID LPAREN params RPAREN .  (67)

	.  reduce 67


state 123
	non_empty_params : non_empty_params COMMA . exp  (71)

	ID  shift 24
	STRING  shift 25
	INT  shift 26
	LPAREN  shift 27
	MINUS  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	LET  shift 3
	BREAK  shift 32
	NIL  shift 33
	.  error

	let_stmt  goto 34
	exp  goto 133
	assignment  goto 38
	funcall  goto 39
	var  goto 40
	if_stmt  goto 41
	for_stmt  goto 42
	while_stmt  goto 43


state 124
	exp : ID LBRACK exp RBRACK . OF exp  (51)
	var : ID LBRACK exp RBRACK .  (60)

	OF  shift 134
	COMMA  reduce 60
	SEMICOLON  reduce 60
	RPAREN  reduce 60
	RBRACK  reduce 60
	RBRACE  reduce 60
	PLUS  reduce 60
	MINUS  reduce 60
	TIMES  reduce 60
	DIVIDE  reduce 60
	EQ  reduce 60
	NEQ  reduce 60
	LT  reduce 60
	LE  reduce 60
	GT  reduce 60
	GE  reduce 60
	AND  reduce 60
	OR  reduce 60
	ASSIGN  reduce 60
	THEN  reduce 60
	ELSE  reduce 60
	TO  reduce 60
	DO  reduce 60
	IN  reduce 60
	END  reduce 60
	FUNCTION  reduce 60
	VAR  reduce 60
	TYPE  reduce 60


state 125
	record_initialisation_field : ID EQ . exp  (20)

	ID  shift 24
	STRING  shift 25
	INT  shift 26
	LPAREN  shift 27
	MINUS  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	LET  shift 3
	BREAK  shift 32
	NIL  shift 33
	.  error

	let_stmt  goto 34
	exp  goto 135
	assignment  goto 38
	funcall  goto 39
	var  goto 40
	if_stmt  goto 41
	for_stmt  goto 42
	while_stmt  goto 43


state 126
	exp : ID LBRACE record_initialisation_fields RBRACE .  (52)

	.  reduce 52


state 127
	ne_record_initialisation_fields : ne_record_initialisation_fields COMMA . record_initialisation_field  (19)

	ID  shift 91
	.  error

	record_initialisation_field  goto 136


state 128
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)
	if_stmt : IF exp THEN exp .  (64)
	if_stmt : IF exp THEN exp . ELSE exp  (65)

	PLUS  shift 65
	MINUS  shift 66
	TIMES  shift 67
	DIVIDE  shift 68
	EQ  shift 69
	NEQ  shift 70
	LT  shift 71
	LE  shift 72
	GT  shift 73
	GE  shift 74
	AND  shift 75
	OR  shift 76
	ELSE  shift 137
	COMMA  reduce 64
	SEMICOLON  reduce 64
	RPAREN  reduce 64
	RBRACK  reduce 64
	RBRACE  reduce 64
	THEN  reduce 64
	TO  reduce 64
	DO  reduce 64
	IN  reduce 64
	END  reduce 64
	FUNCTION  reduce 64
	VAR  reduce 64
	TYPE  reduce 64


state 129
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)
	while_stmt : WHILE exp DO exp .  (63)

	PLUS  shift 65
	MINUS  shift 66
	TIMES  shift 67
	DIVIDE  shift 68
	EQ  shift 69
	NEQ  shift 70
	LT  shift 71
	LE  shift 72
	GT  shift 73
	GE  shift 74
	AND  shift 75
	OR  shift 76
	COMMA  reduce 63
	SEMICOLON  reduce 63
	RPAREN  reduce 63
	RBRACK  reduce 63
	RBRACE  reduce 63
	THEN  reduce 63
	ELSE  reduce 63
	TO  reduce 63
	DO  reduce 63
	IN  reduce 63
	END  reduce 63
	FUNCTION  reduce 63
	VAR  reduce 63
	TYPE  reduce 63


state 130
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)
	for_stmt : FOR ID ASSIGN exp . TO exp DO exp  (66)

	PLUS  shift 65
	MINUS  shift 66
	TIMES  shift 67
	DIVIDE  shift 68
	EQ  shift 69
	NEQ  shift 70
	LT  shift 71
	LE  shift 72
	GT  shift 73
	GE  shift 74
	AND  shift 75
	OR  shift 76
	TO  shift 138
	.  error


state 131
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp  (24)

	EQ  shift 139
	.  error


state 132
	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (23)
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)

	PLUS  shift 65
	MINUS  shift 66
	TIMES  shift 67
	DIVIDE  shift 68
	EQ  shift 69
	NEQ  shift 70
	LT  shift 71
	LE  shift 72
	GT  shift 73
	GE  shift 74
	AND  shift 75
	OR  shift 76
	IN  reduce 23
	FUNCTION  reduce 23
	VAR  reduce 23
	TYPE  reduce 23


state 133
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)
	non_empty_params : non_empty_params COMMA exp .  (71)

	PLUS  shift 65
	MINUS  shift 66
	TIMES  shift 67
	DIVIDE  shift 68
	EQ  shift 69
	NEQ  shift 70
	LT  shift 71
	LE  shift 72
	GT  shift 73
	GE  shift 74
	AND  shift 75
	OR  shift 76
	COMMA  reduce 71
	RPAREN  reduce 71


state 134
	exp : ID LBRACK exp RBRACK OF . exp  (51)

	ID  shift 24
	STRING  shift 25
	INT  shift 26
	LPAREN  shift 27
	MINUS  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	LET  shift 3
	BREAK  shift 32
	NIL  shift 33
	.  error

	let_stmt  goto 34
	exp  goto 140
	assignment  goto 38
	funcall  goto 39
	var  goto 40
	if_stmt  goto 41
	for_stmt  goto 42
	while_stmt  goto 43


state 135
	record_initialisation_field : ID EQ exp .  (20)
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)

	PLUS  shift 65
	MINUS  shift 66
	TIMES  shift 67
	DIVIDE  shift 68
	EQ  shift 69
	NEQ  shift 70
	LT  shift 71
	LE  shift 72
	GT  shift 73
	GE  shift 74
	AND  shift 75
	OR  shift 76
	COMMA  reduce 20
	RBRACE  reduce 20


state 136
	ne_record_initialisation_fields : ne_record_initialisation_fields COMMA record_initialisation_field .  (19)

	.  reduce 19


state 137
	if_stmt : IF exp THEN exp ELSE . exp  (65)

	ID  shift 24
	STRING  shift 25
	INT  shift 26
	LPAREN  shift 27
	MINUS  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	LET  shift 3
	BREAK  shift 32
	NIL  shift 33
	.  error

	let_stmt  goto 34
	exp  goto 141
	assignment  goto 38
	funcall  goto 39
	var  goto 40
	if_stmt  goto 41
	for_stmt  goto 42
	while_stmt  goto 43


state 138
	for_stmt : FOR ID ASSIGN exp TO . exp DO exp  (66)

	ID  shift 24
	STRING  shift 25
	INT  shift 26
	LPAREN  shift 27
	MINUS  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	LET  shift 3
	BREAK  shift 32
	NIL  shift 33
	.  error

	let_stmt  goto 34
	exp  goto 142
	assignment  goto 38
	funcall  goto 39
	var  goto 40
	if_stmt  goto 41
	for_stmt  goto 42
	while_stmt  goto 43


state 139
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp  (24)

	ID  shift 24
	STRING  shift 25
	INT  shift 26
	LPAREN  shift 27
	MINUS  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	LET  shift 3
	BREAK  shift 32
	NIL  shift 33
	.  error

	let_stmt  goto 34
	exp  goto 143
	assignment  goto 38
	funcall  goto 39
	var  goto 40
	if_stmt  goto 41
	for_stmt  goto 42
	while_stmt  goto 43


state 140
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)
	exp : ID LBRACK exp RBRACK OF exp .  (51)

	PLUS  shift 65
	MINUS  shift 66
	TIMES  shift 67
	DIVIDE  shift 68
	EQ  shift 69
	NEQ  shift 70
	LT  shift 71
	LE  shift 72
	GT  shift 73
	GE  shift 74
	AND  shift 75
	OR  shift 76
	COMMA  reduce 51
	SEMICOLON  reduce 51
	RPAREN  reduce 51
	RBRACK  reduce 51
	RBRACE  reduce 51
	THEN  reduce 51
	ELSE  reduce 51
	TO  reduce 51
	DO  reduce 51
	IN  reduce 51
	END  reduce 51
	FUNCTION  reduce 51
	VAR  reduce 51
	TYPE  reduce 51


state 141
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)
	if_stmt : IF exp THEN exp ELSE exp .  (65)

	PLUS  shift 65
	MINUS  shift 66
	TIMES  shift 67
	DIVIDE  shift 68
	EQ  shift 69
	NEQ  shift 70
	LT  shift 71
	LE  shift 72
	GT  shift 73
	GE  shift 74
	AND  shift 75
	OR  shift 76
	COMMA  reduce 65
	SEMICOLON  reduce 65
	RPAREN  reduce 65
	RBRACK  reduce 65
	RBRACE  reduce 65
	THEN  reduce 65
	ELSE  reduce 65
	TO  reduce 65
	DO  reduce 65
	IN  reduce 65
	END  reduce 65
	FUNCTION  reduce 65
	VAR  reduce 65
	TYPE  reduce 65


state 142
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)
	for_stmt : FOR ID ASSIGN exp TO exp . DO exp  (66)

	PLUS  shift 65
	MINUS  shift 66
	TIMES  shift 67
	DIVIDE  shift 68
	EQ  shift 69
	NEQ  shift 70
	LT  shift 71
	LE  shift 72
	GT  shift 73
	GE  shift 74
	AND  shift 75
	OR  shift 76
	DO  shift 144
	.  error


state 143
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (24)
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)

	PLUS  shift 65
	MINUS  shift 66
	TIMES  shift 67
	DIVIDE  shift 68
	EQ  shift 69
	NEQ  shift 70
	LT  shift 71
	LE  shift 72
	GT  shift 73
	GE  shift 74
	AND  shift 75
	OR  shift 76
	IN  reduce 24
	FUNCTION  reduce 24
	VAR  reduce 24
	TYPE  reduce 24


state 144
	for_stmt : FOR ID ASSIGN exp TO exp DO . exp  (66)

	ID  shift 24
	STRING  shift 25
	INT  shift 26
	LPAREN  shift 27
	MINUS  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	LET  shift 3
	BREAK  shift 32
	NIL  shift 33
	.  error

	let_stmt  goto 34
	exp  goto 145
	assignment  goto 38
	funcall  goto 39
	var  goto 40
	if_stmt  goto 41
	for_stmt  goto 42
	while_stmt  goto 43


state 145
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)
	for_stmt : FOR ID ASSIGN exp TO exp DO exp .  (66)

	PLUS  shift 65
	MINUS  shift 66
	TIMES  shift 67
	DIVIDE  shift 68
	EQ  shift 69
	NEQ  shift 70
	LT  shift 71
	LE  shift 72
	GT  shift 73
	GE  shift 74
	AND  shift 75
	OR  shift 76
	COMMA  reduce 66
	SEMICOLON  reduce 66
	RPAREN  reduce 66
	RBRACK  reduce 66
	RBRACE  reduce 66
	THEN  reduce 66
	ELSE  reduce 66
	TO  reduce 66
	DO  reduce 66
	IN  reduce 66
	END  reduce 66
	FUNCTION  reduce 66
	VAR  reduce 66
	TYPE  reduce 66


48 terminals, 27 nonterminals
73 grammar rules, 146 states

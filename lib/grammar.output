   0  $accept : %entry% $end

   1  input : exp EOF

   2  decs :
   3       | decs dec

   4  dec : tydec
   5      | vardec
   6      | fundec

   7  tydec : TYPE ID EQ ty

   8  ty : ID
   9     | LBRACE tyfields RBRACE
  10     | ARRAY OF ID

  11  tyfields :
  12           | nonempty_tyfields

  13  nonempty_tyfields : tyfield
  14                    | nonempty_tyfields COMMA tyfield

  15  tyfield : ID COLON ID

  16  record_initialisation_fields :
  17                               | ne_record_initialisation_fields

  18  ne_record_initialisation_fields : record_initialisation_field
  19                                  | ne_record_initialisation_fields COMMA record_initialisation_field

  20  record_initialisation_field : ID EQ exp

  21  vardec : VAR ID ASSIGN exp
  22         | VAR ID COLON ID ASSIGN exp

  23  fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp
  24         | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp

  25  let_stmt : LET decs IN expseq END

  26  expseq :
  27         | nonempty_expseq

  28  nonempty_expseq : exp
  29                  | nonempty_expseq SEMICOLON exp
  30                  | error SEMICOLON exp

  31  exp : STRING
  32      | INT
  33      | NIL
  34      | exp PLUS exp
  35      | exp MINUS exp
  36      | exp TIMES exp
  37      | exp DIVIDE exp
  38      | exp EQ exp
  39      | exp NEQ exp
  40      | exp LT exp
  41      | exp GT exp
  42      | exp LE exp
  43      | exp GE exp
  44      | exp AND exp
  45      | exp OR exp
  46      | MINUS exp
  47      | BREAK
  48      | assignment
  49      | funcall
  50      | var
  51      | ID LBRACK exp RBRACK OF exp
  52      | ID LBRACE record_initialisation_fields RBRACE
  53      | if_stmt
  54      | for_stmt
  55      | while_stmt
  56      | LPAREN expseq RPAREN
  57      | LPAREN error RPAREN
  58      | let_stmt

  59  var : var DOT ID
  60      | var LBRACK exp RBRACK
  61      | ID

  62  assignment : var ASSIGN exp

  63  while_stmt : WHILE exp DO exp

  64  if_stmt : IF exp THEN exp
  65          | IF exp THEN exp ELSE exp

  66  for_stmt : FOR ID ASSIGN exp TO exp DO exp

  67  funcall : ID LPAREN params RPAREN

  68  params :
  69         | non_empty_params

  70  non_empty_params : exp
  71                   | non_empty_params COMMA exp

  72  %entry% : '\001' input

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . input  (72)

	ID  shift 3
	STRING  shift 4
	INT  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	input  goto 14
	exp  goto 15
	let_stmt  goto 16
	assignment  goto 17
	funcall  goto 18
	var  goto 19
	if_stmt  goto 20
	for_stmt  goto 21
	while_stmt  goto 22


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	exp : ID . LBRACK exp RBRACK OF exp  (51)
	exp : ID . LBRACE record_initialisation_fields RBRACE  (52)
	var : ID .  (61)
	funcall : ID . LPAREN params RPAREN  (67)

	LPAREN  shift 23
	LBRACK  shift 24
	LBRACE  shift 25
	COMMA  reduce 61
	SEMICOLON  reduce 61
	RPAREN  reduce 61
	RBRACK  reduce 61
	RBRACE  reduce 61
	DOT  reduce 61
	PLUS  reduce 61
	MINUS  reduce 61
	TIMES  reduce 61
	DIVIDE  reduce 61
	EQ  reduce 61
	NEQ  reduce 61
	LT  reduce 61
	LE  reduce 61
	GT  reduce 61
	GE  reduce 61
	AND  reduce 61
	OR  reduce 61
	ASSIGN  reduce 61
	THEN  reduce 61
	ELSE  reduce 61
	TO  reduce 61
	DO  reduce 61
	IN  reduce 61
	END  reduce 61
	FUNCTION  reduce 61
	VAR  reduce 61
	TYPE  reduce 61
	EOF  reduce 61


state 4
	exp : STRING .  (31)

	.  reduce 31


state 5
	exp : INT .  (32)

	.  reduce 32


state 6
	exp : LPAREN . expseq RPAREN  (56)
	exp : LPAREN . error RPAREN  (57)
	expseq : .  (26)

	error  shift 26
	ID  shift 3
	STRING  shift 4
	INT  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	RPAREN  reduce 26

	exp  goto 27
	let_stmt  goto 16
	expseq  goto 28
	nonempty_expseq  goto 29
	assignment  goto 17
	funcall  goto 18
	var  goto 19
	if_stmt  goto 20
	for_stmt  goto 21
	while_stmt  goto 22


state 7
	exp : MINUS . exp  (46)

	ID  shift 3
	STRING  shift 4
	INT  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 30
	let_stmt  goto 16
	assignment  goto 17
	funcall  goto 18
	var  goto 19
	if_stmt  goto 20
	for_stmt  goto 21
	while_stmt  goto 22


state 8
	if_stmt : IF . exp THEN exp  (64)
	if_stmt : IF . exp THEN exp ELSE exp  (65)

	ID  shift 3
	STRING  shift 4
	INT  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 31
	let_stmt  goto 16
	assignment  goto 17
	funcall  goto 18
	var  goto 19
	if_stmt  goto 20
	for_stmt  goto 21
	while_stmt  goto 22


state 9
	while_stmt : WHILE . exp DO exp  (63)

	ID  shift 3
	STRING  shift 4
	INT  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 32
	let_stmt  goto 16
	assignment  goto 17
	funcall  goto 18
	var  goto 19
	if_stmt  goto 20
	for_stmt  goto 21
	while_stmt  goto 22


state 10
	for_stmt : FOR . ID ASSIGN exp TO exp DO exp  (66)

	ID  shift 33
	.  error


state 11
	let_stmt : LET . decs IN expseq END  (25)
	decs : .  (2)

	.  reduce 2

	decs  goto 34


state 12
	exp : BREAK .  (47)

	.  reduce 47


state 13
	exp : NIL .  (33)

	.  reduce 33


state 14
	%entry% : '\001' input .  (72)

	.  reduce 72


state 15
	input : exp . EOF  (1)
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)

	PLUS  shift 35
	MINUS  shift 36
	TIMES  shift 37
	DIVIDE  shift 38
	EQ  shift 39
	NEQ  shift 40
	LT  shift 41
	LE  shift 42
	GT  shift 43
	GE  shift 44
	AND  shift 45
	OR  shift 46
	EOF  shift 47
	.  error


state 16
	exp : let_stmt .  (58)

	.  reduce 58


state 17
	exp : assignment .  (48)

	.  reduce 48


state 18
	exp : funcall .  (49)

	.  reduce 49


state 19
	exp : var .  (50)
	var : var . DOT ID  (59)
	var : var . LBRACK exp RBRACK  (60)
	assignment : var . ASSIGN exp  (62)

	LBRACK  shift 48
	DOT  shift 49
	ASSIGN  shift 50
	COMMA  reduce 50
	SEMICOLON  reduce 50
	RPAREN  reduce 50
	RBRACK  reduce 50
	RBRACE  reduce 50
	PLUS  reduce 50
	MINUS  reduce 50
	TIMES  reduce 50
	DIVIDE  reduce 50
	EQ  reduce 50
	NEQ  reduce 50
	LT  reduce 50
	LE  reduce 50
	GT  reduce 50
	GE  reduce 50
	AND  reduce 50
	OR  reduce 50
	THEN  reduce 50
	ELSE  reduce 50
	TO  reduce 50
	DO  reduce 50
	IN  reduce 50
	END  reduce 50
	FUNCTION  reduce 50
	VAR  reduce 50
	TYPE  reduce 50
	EOF  reduce 50


state 20
	exp : if_stmt .  (53)

	.  reduce 53


state 21
	exp : for_stmt .  (54)

	.  reduce 54


state 22
	exp : while_stmt .  (55)

	.  reduce 55


state 23
	funcall : ID LPAREN . params RPAREN  (67)
	params : .  (68)

	ID  shift 3
	STRING  shift 4
	INT  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	RPAREN  reduce 68

	exp  goto 51
	let_stmt  goto 16
	assignment  goto 17
	funcall  goto 18
	var  goto 19
	if_stmt  goto 20
	for_stmt  goto 21
	while_stmt  goto 22
	params  goto 52
	non_empty_params  goto 53


state 24
	exp : ID LBRACK . exp RBRACK OF exp  (51)

	ID  shift 3
	STRING  shift 4
	INT  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 54
	let_stmt  goto 16
	assignment  goto 17
	funcall  goto 18
	var  goto 19
	if_stmt  goto 20
	for_stmt  goto 21
	while_stmt  goto 22


state 25
	exp : ID LBRACE . record_initialisation_fields RBRACE  (52)
	record_initialisation_fields : .  (16)

	ID  shift 55
	RBRACE  reduce 16

	record_initialisation_fields  goto 56
	ne_record_initialisation_fields  goto 57
	record_initialisation_field  goto 58


state 26
	nonempty_expseq : error . SEMICOLON exp  (30)
	exp : LPAREN error . RPAREN  (57)

	SEMICOLON  shift 59
	RPAREN  shift 60
	.  error


state 27
	nonempty_expseq : exp .  (28)
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)

	PLUS  shift 35
	MINUS  shift 36
	TIMES  shift 37
	DIVIDE  shift 38
	EQ  shift 39
	NEQ  shift 40
	LT  shift 41
	LE  shift 42
	GT  shift 43
	GE  shift 44
	AND  shift 45
	OR  shift 46
	SEMICOLON  reduce 28
	RPAREN  reduce 28
	END  reduce 28


state 28
	exp : LPAREN expseq . RPAREN  (56)

	RPAREN  shift 61
	.  error


state 29
	expseq : nonempty_expseq .  (27)
	nonempty_expseq : nonempty_expseq . SEMICOLON exp  (29)

	SEMICOLON  shift 62
	RPAREN  reduce 27
	END  reduce 27


state 30
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)
	exp : MINUS exp .  (46)

	.  reduce 46


state 31
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)
	if_stmt : IF exp . THEN exp  (64)
	if_stmt : IF exp . THEN exp ELSE exp  (65)

	PLUS  shift 35
	MINUS  shift 36
	TIMES  shift 37
	DIVIDE  shift 38
	EQ  shift 39
	NEQ  shift 40
	LT  shift 41
	LE  shift 42
	GT  shift 43
	GE  shift 44
	AND  shift 45
	OR  shift 46
	THEN  shift 63
	.  error


state 32
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)
	while_stmt : WHILE exp . DO exp  (63)

	PLUS  shift 35
	MINUS  shift 36
	TIMES  shift 37
	DIVIDE  shift 38
	EQ  shift 39
	NEQ  shift 40
	LT  shift 41
	LE  shift 42
	GT  shift 43
	GE  shift 44
	AND  shift 45
	OR  shift 46
	DO  shift 64
	.  error


state 33
	for_stmt : FOR ID . ASSIGN exp TO exp DO exp  (66)

	ASSIGN  shift 65
	.  error


state 34
	decs : decs . dec  (3)
	let_stmt : LET decs . IN expseq END  (25)

	IN  shift 66
	FUNCTION  shift 67
	VAR  shift 68
	TYPE  shift 69
	.  error

	dec  goto 70
	tydec  goto 71
	vardec  goto 72
	fundec  goto 73


state 35
	exp : exp PLUS . exp  (34)

	ID  shift 3
	STRING  shift 4
	INT  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 74
	let_stmt  goto 16
	assignment  goto 17
	funcall  goto 18
	var  goto 19
	if_stmt  goto 20
	for_stmt  goto 21
	while_stmt  goto 22


state 36
	exp : exp MINUS . exp  (35)

	ID  shift 3
	STRING  shift 4
	INT  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 75
	let_stmt  goto 16
	assignment  goto 17
	funcall  goto 18
	var  goto 19
	if_stmt  goto 20
	for_stmt  goto 21
	while_stmt  goto 22


state 37
	exp : exp TIMES . exp  (36)

	ID  shift 3
	STRING  shift 4
	INT  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 76
	let_stmt  goto 16
	assignment  goto 17
	funcall  goto 18
	var  goto 19
	if_stmt  goto 20
	for_stmt  goto 21
	while_stmt  goto 22


state 38
	exp : exp DIVIDE . exp  (37)

	ID  shift 3
	STRING  shift 4
	INT  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 77
	let_stmt  goto 16
	assignment  goto 17
	funcall  goto 18
	var  goto 19
	if_stmt  goto 20
	for_stmt  goto 21
	while_stmt  goto 22


state 39
	exp : exp EQ . exp  (38)

	ID  shift 3
	STRING  shift 4
	INT  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 78
	let_stmt  goto 16
	assignment  goto 17
	funcall  goto 18
	var  goto 19
	if_stmt  goto 20
	for_stmt  goto 21
	while_stmt  goto 22


state 40
	exp : exp NEQ . exp  (39)

	ID  shift 3
	STRING  shift 4
	INT  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 79
	let_stmt  goto 16
	assignment  goto 17
	funcall  goto 18
	var  goto 19
	if_stmt  goto 20
	for_stmt  goto 21
	while_stmt  goto 22


state 41
	exp : exp LT . exp  (40)

	ID  shift 3
	STRING  shift 4
	INT  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 80
	let_stmt  goto 16
	assignment  goto 17
	funcall  goto 18
	var  goto 19
	if_stmt  goto 20
	for_stmt  goto 21
	while_stmt  goto 22


state 42
	exp : exp LE . exp  (42)

	ID  shift 3
	STRING  shift 4
	INT  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 81
	let_stmt  goto 16
	assignment  goto 17
	funcall  goto 18
	var  goto 19
	if_stmt  goto 20
	for_stmt  goto 21
	while_stmt  goto 22


state 43
	exp : exp GT . exp  (41)

	ID  shift 3
	STRING  shift 4
	INT  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 82
	let_stmt  goto 16
	assignment  goto 17
	funcall  goto 18
	var  goto 19
	if_stmt  goto 20
	for_stmt  goto 21
	while_stmt  goto 22


state 44
	exp : exp GE . exp  (43)

	ID  shift 3
	STRING  shift 4
	INT  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 83
	let_stmt  goto 16
	assignment  goto 17
	funcall  goto 18
	var  goto 19
	if_stmt  goto 20
	for_stmt  goto 21
	while_stmt  goto 22


state 45
	exp : exp AND . exp  (44)

	ID  shift 3
	STRING  shift 4
	INT  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 84
	let_stmt  goto 16
	assignment  goto 17
	funcall  goto 18
	var  goto 19
	if_stmt  goto 20
	for_stmt  goto 21
	while_stmt  goto 22


state 46
	exp : exp OR . exp  (45)

	ID  shift 3
	STRING  shift 4
	INT  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 85
	let_stmt  goto 16
	assignment  goto 17
	funcall  goto 18
	var  goto 19
	if_stmt  goto 20
	for_stmt  goto 21
	while_stmt  goto 22


state 47
	input : exp EOF .  (1)

	.  reduce 1


state 48
	var : var LBRACK . exp RBRACK  (60)

	ID  shift 3
	STRING  shift 4
	INT  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 86
	let_stmt  goto 16
	assignment  goto 17
	funcall  goto 18
	var  goto 19
	if_stmt  goto 20
	for_stmt  goto 21
	while_stmt  goto 22


state 49
	var : var DOT . ID  (59)

	ID  shift 87
	.  error


state 50
	assignment : var ASSIGN . exp  (62)

	ID  shift 3
	STRING  shift 4
	INT  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 88
	let_stmt  goto 16
	assignment  goto 17
	funcall  goto 18
	var  goto 19
	if_stmt  goto 20
	for_stmt  goto 21
	while_stmt  goto 22


state 51
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)
	non_empty_params : exp .  (70)

	PLUS  shift 35
	MINUS  shift 36
	TIMES  shift 37
	DIVIDE  shift 38
	EQ  shift 39
	NEQ  shift 40
	LT  shift 41
	LE  shift 42
	GT  shift 43
	GE  shift 44
	AND  shift 45
	OR  shift 46
	COMMA  reduce 70
	RPAREN  reduce 70


state 52
	funcall : ID LPAREN params . RPAREN  (67)

	RPAREN  shift 89
	.  error


state 53
	params : non_empty_params .  (69)
	non_empty_params : non_empty_params . COMMA exp  (71)

	COMMA  shift 90
	RPAREN  reduce 69


state 54
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)
	exp : ID LBRACK exp . RBRACK OF exp  (51)

	RBRACK  shift 91
	PLUS  shift 35
	MINUS  shift 36
	TIMES  shift 37
	DIVIDE  shift 38
	EQ  shift 39
	NEQ  shift 40
	LT  shift 41
	LE  shift 42
	GT  shift 43
	GE  shift 44
	AND  shift 45
	OR  shift 46
	.  error


state 55
	record_initialisation_field : ID . EQ exp  (20)

	EQ  shift 92
	.  error


state 56
	exp : ID LBRACE record_initialisation_fields . RBRACE  (52)

	RBRACE  shift 93
	.  error


state 57
	record_initialisation_fields : ne_record_initialisation_fields .  (17)
	ne_record_initialisation_fields : ne_record_initialisation_fields . COMMA record_initialisation_field  (19)

	COMMA  shift 94
	RBRACE  reduce 17


state 58
	ne_record_initialisation_fields : record_initialisation_field .  (18)

	.  reduce 18


state 59
	nonempty_expseq : error SEMICOLON . exp  (30)

	ID  shift 3
	STRING  shift 4
	INT  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 95
	let_stmt  goto 16
	assignment  goto 17
	funcall  goto 18
	var  goto 19
	if_stmt  goto 20
	for_stmt  goto 21
	while_stmt  goto 22


state 60
	exp : LPAREN error RPAREN .  (57)

	.  reduce 57


state 61
	exp : LPAREN expseq RPAREN .  (56)

	.  reduce 56


state 62
	nonempty_expseq : nonempty_expseq SEMICOLON . exp  (29)

	ID  shift 3
	STRING  shift 4
	INT  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 96
	let_stmt  goto 16
	assignment  goto 17
	funcall  goto 18
	var  goto 19
	if_stmt  goto 20
	for_stmt  goto 21
	while_stmt  goto 22


state 63
	if_stmt : IF exp THEN . exp  (64)
	if_stmt : IF exp THEN . exp ELSE exp  (65)

	ID  shift 3
	STRING  shift 4
	INT  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 97
	let_stmt  goto 16
	assignment  goto 17
	funcall  goto 18
	var  goto 19
	if_stmt  goto 20
	for_stmt  goto 21
	while_stmt  goto 22


state 64
	while_stmt : WHILE exp DO . exp  (63)

	ID  shift 3
	STRING  shift 4
	INT  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 98
	let_stmt  goto 16
	assignment  goto 17
	funcall  goto 18
	var  goto 19
	if_stmt  goto 20
	for_stmt  goto 21
	while_stmt  goto 22


state 65
	for_stmt : FOR ID ASSIGN . exp TO exp DO exp  (66)

	ID  shift 3
	STRING  shift 4
	INT  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 99
	let_stmt  goto 16
	assignment  goto 17
	funcall  goto 18
	var  goto 19
	if_stmt  goto 20
	for_stmt  goto 21
	while_stmt  goto 22


state 66
	let_stmt : LET decs IN . expseq END  (25)
	expseq : .  (26)

	error  shift 100
	ID  shift 3
	STRING  shift 4
	INT  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	END  reduce 26

	exp  goto 27
	let_stmt  goto 16
	expseq  goto 101
	nonempty_expseq  goto 29
	assignment  goto 17
	funcall  goto 18
	var  goto 19
	if_stmt  goto 20
	for_stmt  goto 21
	while_stmt  goto 22


state 67
	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp  (23)
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp  (24)

	ID  shift 102
	.  error


state 68
	vardec : VAR . ID ASSIGN exp  (21)
	vardec : VAR . ID COLON ID ASSIGN exp  (22)

	ID  shift 103
	.  error


state 69
	tydec : TYPE . ID EQ ty  (7)

	ID  shift 104
	.  error


state 70
	decs : decs dec .  (3)

	.  reduce 3


state 71
	dec : tydec .  (4)

	.  reduce 4


state 72
	dec : vardec .  (5)

	.  reduce 5


state 73
	dec : fundec .  (6)

	.  reduce 6


state 74
	exp : exp . PLUS exp  (34)
	exp : exp PLUS exp .  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)

	TIMES  shift 37
	DIVIDE  shift 38
	COMMA  reduce 34
	SEMICOLON  reduce 34
	RPAREN  reduce 34
	RBRACK  reduce 34
	RBRACE  reduce 34
	PLUS  reduce 34
	MINUS  reduce 34
	EQ  reduce 34
	NEQ  reduce 34
	LT  reduce 34
	LE  reduce 34
	GT  reduce 34
	GE  reduce 34
	AND  reduce 34
	OR  reduce 34
	THEN  reduce 34
	ELSE  reduce 34
	TO  reduce 34
	DO  reduce 34
	IN  reduce 34
	END  reduce 34
	FUNCTION  reduce 34
	VAR  reduce 34
	TYPE  reduce 34
	EOF  reduce 34


state 75
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp MINUS exp .  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)

	TIMES  shift 37
	DIVIDE  shift 38
	COMMA  reduce 35
	SEMICOLON  reduce 35
	RPAREN  reduce 35
	RBRACK  reduce 35
	RBRACE  reduce 35
	PLUS  reduce 35
	MINUS  reduce 35
	EQ  reduce 35
	NEQ  reduce 35
	LT  reduce 35
	LE  reduce 35
	GT  reduce 35
	GE  reduce 35
	AND  reduce 35
	OR  reduce 35
	THEN  reduce 35
	ELSE  reduce 35
	TO  reduce 35
	DO  reduce 35
	IN  reduce 35
	END  reduce 35
	FUNCTION  reduce 35
	VAR  reduce 35
	TYPE  reduce 35
	EOF  reduce 35


state 76
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp TIMES exp .  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)

	.  reduce 36


state 77
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp DIVIDE exp .  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)

	.  reduce 37


state 78
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp EQ exp .  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)

	PLUS  shift 35
	MINUS  shift 36
	TIMES  shift 37
	DIVIDE  shift 38
	LT  shift 41
	LE  shift 42
	GT  shift 43
	GE  shift 44
	COMMA  reduce 38
	SEMICOLON  reduce 38
	RPAREN  reduce 38
	RBRACK  reduce 38
	RBRACE  reduce 38
	EQ  reduce 38
	NEQ  reduce 38
	AND  reduce 38
	OR  reduce 38
	THEN  reduce 38
	ELSE  reduce 38
	TO  reduce 38
	DO  reduce 38
	IN  reduce 38
	END  reduce 38
	FUNCTION  reduce 38
	VAR  reduce 38
	TYPE  reduce 38
	EOF  reduce 38


state 79
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp NEQ exp .  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)

	PLUS  shift 35
	MINUS  shift 36
	TIMES  shift 37
	DIVIDE  shift 38
	LT  shift 41
	LE  shift 42
	GT  shift 43
	GE  shift 44
	COMMA  reduce 39
	SEMICOLON  reduce 39
	RPAREN  reduce 39
	RBRACK  reduce 39
	RBRACE  reduce 39
	EQ  reduce 39
	NEQ  reduce 39
	AND  reduce 39
	OR  reduce 39
	THEN  reduce 39
	ELSE  reduce 39
	TO  reduce 39
	DO  reduce 39
	IN  reduce 39
	END  reduce 39
	FUNCTION  reduce 39
	VAR  reduce 39
	TYPE  reduce 39
	EOF  reduce 39


state 80
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp LT exp .  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)

	PLUS  shift 35
	MINUS  shift 36
	TIMES  shift 37
	DIVIDE  shift 38
	COMMA  reduce 40
	SEMICOLON  reduce 40
	RPAREN  reduce 40
	RBRACK  reduce 40
	RBRACE  reduce 40
	EQ  reduce 40
	NEQ  reduce 40
	LT  reduce 40
	LE  reduce 40
	GT  reduce 40
	GE  reduce 40
	AND  reduce 40
	OR  reduce 40
	THEN  reduce 40
	ELSE  reduce 40
	TO  reduce 40
	DO  reduce 40
	IN  reduce 40
	END  reduce 40
	FUNCTION  reduce 40
	VAR  reduce 40
	TYPE  reduce 40
	EOF  reduce 40


state 81
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp LE exp .  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)

	PLUS  shift 35
	MINUS  shift 36
	TIMES  shift 37
	DIVIDE  shift 38
	COMMA  reduce 42
	SEMICOLON  reduce 42
	RPAREN  reduce 42
	RBRACK  reduce 42
	RBRACE  reduce 42
	EQ  reduce 42
	NEQ  reduce 42
	LT  reduce 42
	LE  reduce 42
	GT  reduce 42
	GE  reduce 42
	AND  reduce 42
	OR  reduce 42
	THEN  reduce 42
	ELSE  reduce 42
	TO  reduce 42
	DO  reduce 42
	IN  reduce 42
	END  reduce 42
	FUNCTION  reduce 42
	VAR  reduce 42
	TYPE  reduce 42
	EOF  reduce 42


state 82
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp GT exp .  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)

	PLUS  shift 35
	MINUS  shift 36
	TIMES  shift 37
	DIVIDE  shift 38
	COMMA  reduce 41
	SEMICOLON  reduce 41
	RPAREN  reduce 41
	RBRACK  reduce 41
	RBRACE  reduce 41
	EQ  reduce 41
	NEQ  reduce 41
	LT  reduce 41
	LE  reduce 41
	GT  reduce 41
	GE  reduce 41
	AND  reduce 41
	OR  reduce 41
	THEN  reduce 41
	ELSE  reduce 41
	TO  reduce 41
	DO  reduce 41
	IN  reduce 41
	END  reduce 41
	FUNCTION  reduce 41
	VAR  reduce 41
	TYPE  reduce 41
	EOF  reduce 41


state 83
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp GE exp .  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)

	PLUS  shift 35
	MINUS  shift 36
	TIMES  shift 37
	DIVIDE  shift 38
	COMMA  reduce 43
	SEMICOLON  reduce 43
	RPAREN  reduce 43
	RBRACK  reduce 43
	RBRACE  reduce 43
	EQ  reduce 43
	NEQ  reduce 43
	LT  reduce 43
	LE  reduce 43
	GT  reduce 43
	GE  reduce 43
	AND  reduce 43
	OR  reduce 43
	THEN  reduce 43
	ELSE  reduce 43
	TO  reduce 43
	DO  reduce 43
	IN  reduce 43
	END  reduce 43
	FUNCTION  reduce 43
	VAR  reduce 43
	TYPE  reduce 43
	EOF  reduce 43


state 84
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp AND exp .  (44)
	exp : exp . OR exp  (45)

	PLUS  shift 35
	MINUS  shift 36
	TIMES  shift 37
	DIVIDE  shift 38
	EQ  shift 39
	NEQ  shift 40
	LT  shift 41
	LE  shift 42
	GT  shift 43
	GE  shift 44
	COMMA  reduce 44
	SEMICOLON  reduce 44
	RPAREN  reduce 44
	RBRACK  reduce 44
	RBRACE  reduce 44
	AND  reduce 44
	OR  reduce 44
	THEN  reduce 44
	ELSE  reduce 44
	TO  reduce 44
	DO  reduce 44
	IN  reduce 44
	END  reduce 44
	FUNCTION  reduce 44
	VAR  reduce 44
	TYPE  reduce 44
	EOF  reduce 44


state 85
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)
	exp : exp OR exp .  (45)

	PLUS  shift 35
	MINUS  shift 36
	TIMES  shift 37
	DIVIDE  shift 38
	EQ  shift 39
	NEQ  shift 40
	LT  shift 41
	LE  shift 42
	GT  shift 43
	GE  shift 44
	COMMA  reduce 45
	SEMICOLON  reduce 45
	RPAREN  reduce 45
	RBRACK  reduce 45
	RBRACE  reduce 45
	AND  reduce 45
	OR  reduce 45
	THEN  reduce 45
	ELSE  reduce 45
	TO  reduce 45
	DO  reduce 45
	IN  reduce 45
	END  reduce 45
	FUNCTION  reduce 45
	VAR  reduce 45
	TYPE  reduce 45
	EOF  reduce 45


state 86
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)
	var : var LBRACK exp . RBRACK  (60)

	RBRACK  shift 105
	PLUS  shift 35
	MINUS  shift 36
	TIMES  shift 37
	DIVIDE  shift 38
	EQ  shift 39
	NEQ  shift 40
	LT  shift 41
	LE  shift 42
	GT  shift 43
	GE  shift 44
	AND  shift 45
	OR  shift 46
	.  error


state 87
	var : var DOT ID .  (59)

	.  reduce 59


state 88
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)
	assignment : var ASSIGN exp .  (62)

	PLUS  shift 35
	MINUS  shift 36
	TIMES  shift 37
	DIVIDE  shift 38
	EQ  shift 39
	NEQ  shift 40
	LT  shift 41
	LE  shift 42
	GT  shift 43
	GE  shift 44
	AND  shift 45
	OR  shift 46
	COMMA  reduce 62
	SEMICOLON  reduce 62
	RPAREN  reduce 62
	RBRACK  reduce 62
	RBRACE  reduce 62
	THEN  reduce 62
	ELSE  reduce 62
	TO  reduce 62
	DO  reduce 62
	IN  reduce 62
	END  reduce 62
	FUNCTION  reduce 62
	VAR  reduce 62
	TYPE  reduce 62
	EOF  reduce 62


state 89
	funcall : ID LPAREN params RPAREN .  (67)

	.  reduce 67


state 90
	non_empty_params : non_empty_params COMMA . exp  (71)

	ID  shift 3
	STRING  shift 4
	INT  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 106
	let_stmt  goto 16
	assignment  goto 17
	funcall  goto 18
	var  goto 19
	if_stmt  goto 20
	for_stmt  goto 21
	while_stmt  goto 22


state 91
	exp : ID LBRACK exp RBRACK . OF exp  (51)

	OF  shift 107
	.  error


state 92
	record_initialisation_field : ID EQ . exp  (20)

	ID  shift 3
	STRING  shift 4
	INT  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 108
	let_stmt  goto 16
	assignment  goto 17
	funcall  goto 18
	var  goto 19
	if_stmt  goto 20
	for_stmt  goto 21
	while_stmt  goto 22


state 93
	exp : ID LBRACE record_initialisation_fields RBRACE .  (52)

	.  reduce 52


state 94
	ne_record_initialisation_fields : ne_record_initialisation_fields COMMA . record_initialisation_field  (19)

	ID  shift 55
	.  error

	record_initialisation_field  goto 109


state 95
	nonempty_expseq : error SEMICOLON exp .  (30)
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)

	PLUS  shift 35
	MINUS  shift 36
	TIMES  shift 37
	DIVIDE  shift 38
	EQ  shift 39
	NEQ  shift 40
	LT  shift 41
	LE  shift 42
	GT  shift 43
	GE  shift 44
	AND  shift 45
	OR  shift 46
	SEMICOLON  reduce 30
	RPAREN  reduce 30
	END  reduce 30


state 96
	nonempty_expseq : nonempty_expseq SEMICOLON exp .  (29)
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)

	PLUS  shift 35
	MINUS  shift 36
	TIMES  shift 37
	DIVIDE  shift 38
	EQ  shift 39
	NEQ  shift 40
	LT  shift 41
	LE  shift 42
	GT  shift 43
	GE  shift 44
	AND  shift 45
	OR  shift 46
	SEMICOLON  reduce 29
	RPAREN  reduce 29
	END  reduce 29


state 97
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)
	if_stmt : IF exp THEN exp .  (64)
	if_stmt : IF exp THEN exp . ELSE exp  (65)

	PLUS  shift 35
	MINUS  shift 36
	TIMES  shift 37
	DIVIDE  shift 38
	EQ  shift 39
	NEQ  shift 40
	LT  shift 41
	LE  shift 42
	GT  shift 43
	GE  shift 44
	AND  shift 45
	OR  shift 46
	ELSE  shift 110
	COMMA  reduce 64
	SEMICOLON  reduce 64
	RPAREN  reduce 64
	RBRACK  reduce 64
	RBRACE  reduce 64
	THEN  reduce 64
	TO  reduce 64
	DO  reduce 64
	IN  reduce 64
	END  reduce 64
	FUNCTION  reduce 64
	VAR  reduce 64
	TYPE  reduce 64
	EOF  reduce 64


state 98
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)
	while_stmt : WHILE exp DO exp .  (63)

	PLUS  shift 35
	MINUS  shift 36
	TIMES  shift 37
	DIVIDE  shift 38
	EQ  shift 39
	NEQ  shift 40
	LT  shift 41
	LE  shift 42
	GT  shift 43
	GE  shift 44
	AND  shift 45
	OR  shift 46
	COMMA  reduce 63
	SEMICOLON  reduce 63
	RPAREN  reduce 63
	RBRACK  reduce 63
	RBRACE  reduce 63
	THEN  reduce 63
	ELSE  reduce 63
	TO  reduce 63
	DO  reduce 63
	IN  reduce 63
	END  reduce 63
	FUNCTION  reduce 63
	VAR  reduce 63
	TYPE  reduce 63
	EOF  reduce 63


state 99
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)
	for_stmt : FOR ID ASSIGN exp . TO exp DO exp  (66)

	PLUS  shift 35
	MINUS  shift 36
	TIMES  shift 37
	DIVIDE  shift 38
	EQ  shift 39
	NEQ  shift 40
	LT  shift 41
	LE  shift 42
	GT  shift 43
	GE  shift 44
	AND  shift 45
	OR  shift 46
	TO  shift 111
	.  error


state 100
	nonempty_expseq : error . SEMICOLON exp  (30)

	SEMICOLON  shift 59
	.  error


state 101
	let_stmt : LET decs IN expseq . END  (25)

	END  shift 112
	.  error


state 102
	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp  (23)
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp  (24)

	LPAREN  shift 113
	.  error


state 103
	vardec : VAR ID . ASSIGN exp  (21)
	vardec : VAR ID . COLON ID ASSIGN exp  (22)

	COLON  shift 114
	ASSIGN  shift 115
	.  error


state 104
	tydec : TYPE ID . EQ ty  (7)

	EQ  shift 116
	.  error


state 105
	var : var LBRACK exp RBRACK .  (60)

	.  reduce 60


state 106
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)
	non_empty_params : non_empty_params COMMA exp .  (71)

	PLUS  shift 35
	MINUS  shift 36
	TIMES  shift 37
	DIVIDE  shift 38
	EQ  shift 39
	NEQ  shift 40
	LT  shift 41
	LE  shift 42
	GT  shift 43
	GE  shift 44
	AND  shift 45
	OR  shift 46
	COMMA  reduce 71
	RPAREN  reduce 71


state 107
	exp : ID LBRACK exp RBRACK OF . exp  (51)

	ID  shift 3
	STRING  shift 4
	INT  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 117
	let_stmt  goto 16
	assignment  goto 17
	funcall  goto 18
	var  goto 19
	if_stmt  goto 20
	for_stmt  goto 21
	while_stmt  goto 22


state 108
	record_initialisation_field : ID EQ exp .  (20)
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)

	PLUS  shift 35
	MINUS  shift 36
	TIMES  shift 37
	DIVIDE  shift 38
	EQ  shift 39
	NEQ  shift 40
	LT  shift 41
	LE  shift 42
	GT  shift 43
	GE  shift 44
	AND  shift 45
	OR  shift 46
	COMMA  reduce 20
	RBRACE  reduce 20


state 109
	ne_record_initialisation_fields : ne_record_initialisation_fields COMMA record_initialisation_field .  (19)

	.  reduce 19


state 110
	if_stmt : IF exp THEN exp ELSE . exp  (65)

	ID  shift 3
	STRING  shift 4
	INT  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 118
	let_stmt  goto 16
	assignment  goto 17
	funcall  goto 18
	var  goto 19
	if_stmt  goto 20
	for_stmt  goto 21
	while_stmt  goto 22


state 111
	for_stmt : FOR ID ASSIGN exp TO . exp DO exp  (66)

	ID  shift 3
	STRING  shift 4
	INT  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 119
	let_stmt  goto 16
	assignment  goto 17
	funcall  goto 18
	var  goto 19
	if_stmt  goto 20
	for_stmt  goto 21
	while_stmt  goto 22


state 112
	let_stmt : LET decs IN expseq END .  (25)

	.  reduce 25


state 113
	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp  (23)
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp  (24)
	tyfields : .  (11)

	ID  shift 120
	RPAREN  reduce 11

	tyfields  goto 121
	nonempty_tyfields  goto 122
	tyfield  goto 123


state 114
	vardec : VAR ID COLON . ID ASSIGN exp  (22)

	ID  shift 124
	.  error


state 115
	vardec : VAR ID ASSIGN . exp  (21)

	ID  shift 3
	STRING  shift 4
	INT  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 125
	let_stmt  goto 16
	assignment  goto 17
	funcall  goto 18
	var  goto 19
	if_stmt  goto 20
	for_stmt  goto 21
	while_stmt  goto 22


state 116
	tydec : TYPE ID EQ . ty  (7)

	ID  shift 126
	LBRACE  shift 127
	ARRAY  shift 128
	.  error

	ty  goto 129


state 117
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)
	exp : ID LBRACK exp RBRACK OF exp .  (51)

	PLUS  shift 35
	MINUS  shift 36
	TIMES  shift 37
	DIVIDE  shift 38
	EQ  shift 39
	NEQ  shift 40
	LT  shift 41
	LE  shift 42
	GT  shift 43
	GE  shift 44
	AND  shift 45
	OR  shift 46
	COMMA  reduce 51
	SEMICOLON  reduce 51
	RPAREN  reduce 51
	RBRACK  reduce 51
	RBRACE  reduce 51
	THEN  reduce 51
	ELSE  reduce 51
	TO  reduce 51
	DO  reduce 51
	IN  reduce 51
	END  reduce 51
	FUNCTION  reduce 51
	VAR  reduce 51
	TYPE  reduce 51
	EOF  reduce 51


state 118
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)
	if_stmt : IF exp THEN exp ELSE exp .  (65)

	PLUS  shift 35
	MINUS  shift 36
	TIMES  shift 37
	DIVIDE  shift 38
	EQ  shift 39
	NEQ  shift 40
	LT  shift 41
	LE  shift 42
	GT  shift 43
	GE  shift 44
	AND  shift 45
	OR  shift 46
	COMMA  reduce 65
	SEMICOLON  reduce 65
	RPAREN  reduce 65
	RBRACK  reduce 65
	RBRACE  reduce 65
	THEN  reduce 65
	ELSE  reduce 65
	TO  reduce 65
	DO  reduce 65
	IN  reduce 65
	END  reduce 65
	FUNCTION  reduce 65
	VAR  reduce 65
	TYPE  reduce 65
	EOF  reduce 65


state 119
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)
	for_stmt : FOR ID ASSIGN exp TO exp . DO exp  (66)

	PLUS  shift 35
	MINUS  shift 36
	TIMES  shift 37
	DIVIDE  shift 38
	EQ  shift 39
	NEQ  shift 40
	LT  shift 41
	LE  shift 42
	GT  shift 43
	GE  shift 44
	AND  shift 45
	OR  shift 46
	DO  shift 130
	.  error


state 120
	tyfield : ID . COLON ID  (15)

	COLON  shift 131
	.  error


state 121
	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp  (23)
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp  (24)

	RPAREN  shift 132
	.  error


state 122
	tyfields : nonempty_tyfields .  (12)
	nonempty_tyfields : nonempty_tyfields . COMMA tyfield  (14)

	COMMA  shift 133
	RPAREN  reduce 12
	RBRACE  reduce 12


state 123
	nonempty_tyfields : tyfield .  (13)

	.  reduce 13


state 124
	vardec : VAR ID COLON ID . ASSIGN exp  (22)

	ASSIGN  shift 134
	.  error


state 125
	vardec : VAR ID ASSIGN exp .  (21)
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)

	PLUS  shift 35
	MINUS  shift 36
	TIMES  shift 37
	DIVIDE  shift 38
	EQ  shift 39
	NEQ  shift 40
	LT  shift 41
	LE  shift 42
	GT  shift 43
	GE  shift 44
	AND  shift 45
	OR  shift 46
	IN  reduce 21
	FUNCTION  reduce 21
	VAR  reduce 21
	TYPE  reduce 21


state 126
	ty : ID .  (8)

	.  reduce 8


state 127
	ty : LBRACE . tyfields RBRACE  (9)
	tyfields : .  (11)

	ID  shift 120
	RBRACE  reduce 11

	tyfields  goto 135
	nonempty_tyfields  goto 122
	tyfield  goto 123


state 128
	ty : ARRAY . OF ID  (10)

	OF  shift 136
	.  error


state 129
	tydec : TYPE ID EQ ty .  (7)

	.  reduce 7


state 130
	for_stmt : FOR ID ASSIGN exp TO exp DO . exp  (66)

	ID  shift 3
	STRING  shift 4
	INT  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 137
	let_stmt  goto 16
	assignment  goto 17
	funcall  goto 18
	var  goto 19
	if_stmt  goto 20
	for_stmt  goto 21
	while_stmt  goto 22


state 131
	tyfield : ID COLON . ID  (15)

	ID  shift 138
	.  error


state 132
	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp  (23)
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp  (24)

	COLON  shift 139
	EQ  shift 140
	.  error


state 133
	nonempty_tyfields : nonempty_tyfields COMMA . tyfield  (14)

	ID  shift 120
	.  error

	tyfield  goto 141


state 134
	vardec : VAR ID COLON ID ASSIGN . exp  (22)

	ID  shift 3
	STRING  shift 4
	INT  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 142
	let_stmt  goto 16
	assignment  goto 17
	funcall  goto 18
	var  goto 19
	if_stmt  goto 20
	for_stmt  goto 21
	while_stmt  goto 22


state 135
	ty : LBRACE tyfields . RBRACE  (9)

	RBRACE  shift 143
	.  error


state 136
	ty : ARRAY OF . ID  (10)

	ID  shift 144
	.  error


state 137
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)
	for_stmt : FOR ID ASSIGN exp TO exp DO exp .  (66)

	PLUS  shift 35
	MINUS  shift 36
	TIMES  shift 37
	DIVIDE  shift 38
	EQ  shift 39
	NEQ  shift 40
	LT  shift 41
	LE  shift 42
	GT  shift 43
	GE  shift 44
	AND  shift 45
	OR  shift 46
	COMMA  reduce 66
	SEMICOLON  reduce 66
	RPAREN  reduce 66
	RBRACK  reduce 66
	RBRACE  reduce 66
	THEN  reduce 66
	ELSE  reduce 66
	TO  reduce 66
	DO  reduce 66
	IN  reduce 66
	END  reduce 66
	FUNCTION  reduce 66
	VAR  reduce 66
	TYPE  reduce 66
	EOF  reduce 66


state 138
	tyfield : ID COLON ID .  (15)

	.  reduce 15


state 139
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp  (24)

	ID  shift 145
	.  error


state 140
	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp  (23)

	ID  shift 3
	STRING  shift 4
	INT  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 146
	let_stmt  goto 16
	assignment  goto 17
	funcall  goto 18
	var  goto 19
	if_stmt  goto 20
	for_stmt  goto 21
	while_stmt  goto 22


state 141
	nonempty_tyfields : nonempty_tyfields COMMA tyfield .  (14)

	.  reduce 14


state 142
	vardec : VAR ID COLON ID ASSIGN exp .  (22)
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)

	PLUS  shift 35
	MINUS  shift 36
	TIMES  shift 37
	DIVIDE  shift 38
	EQ  shift 39
	NEQ  shift 40
	LT  shift 41
	LE  shift 42
	GT  shift 43
	GE  shift 44
	AND  shift 45
	OR  shift 46
	IN  reduce 22
	FUNCTION  reduce 22
	VAR  reduce 22
	TYPE  reduce 22


state 143
	ty : LBRACE tyfields RBRACE .  (9)

	.  reduce 9


state 144
	ty : ARRAY OF ID .  (10)

	.  reduce 10


state 145
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp  (24)

	EQ  shift 147
	.  error


state 146
	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (23)
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)

	PLUS  shift 35
	MINUS  shift 36
	TIMES  shift 37
	DIVIDE  shift 38
	EQ  shift 39
	NEQ  shift 40
	LT  shift 41
	LE  shift 42
	GT  shift 43
	GE  shift 44
	AND  shift 45
	OR  shift 46
	IN  reduce 23
	FUNCTION  reduce 23
	VAR  reduce 23
	TYPE  reduce 23


state 147
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp  (24)

	ID  shift 3
	STRING  shift 4
	INT  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 148
	let_stmt  goto 16
	assignment  goto 17
	funcall  goto 18
	var  goto 19
	if_stmt  goto 20
	for_stmt  goto 21
	while_stmt  goto 22


state 148
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (24)
	exp : exp . PLUS exp  (34)
	exp : exp . MINUS exp  (35)
	exp : exp . TIMES exp  (36)
	exp : exp . DIVIDE exp  (37)
	exp : exp . EQ exp  (38)
	exp : exp . NEQ exp  (39)
	exp : exp . LT exp  (40)
	exp : exp . GT exp  (41)
	exp : exp . LE exp  (42)
	exp : exp . GE exp  (43)
	exp : exp . AND exp  (44)
	exp : exp . OR exp  (45)

	PLUS  shift 35
	MINUS  shift 36
	TIMES  shift 37
	DIVIDE  shift 38
	EQ  shift 39
	NEQ  shift 40
	LT  shift 41
	LE  shift 42
	GT  shift 43
	GE  shift 44
	AND  shift 45
	OR  shift 46
	IN  reduce 24
	FUNCTION  reduce 24
	VAR  reduce 24
	TYPE  reduce 24


49 terminals, 27 nonterminals
73 grammar rules, 149 states
